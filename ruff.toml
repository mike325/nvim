target-version = "py38"
line-length = 120
indent-width = 4

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[lint]
select = [
    "C90",
    "E",   # pycodestyle
    #"ERA",
    "F",   # Pyflakes
    "PGH",
    "PL",
    "RUF",
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    # "I",   # isort
]


ignore = [
    "E203",  # Whitespace before :
    "E226",  # Whitespace around operators
    "E231",  # Missing whitespace after ,
    "E261",  # 2 spaces before inline comment
    "E262",  # Comments should start with #
    "E265",  # Block comment should start with #
    "E402",  # module level import not at top file
    #"E303",
    #"E501",
    #"ERA001",
    #"PLR0904",
    "UP006", # Use `list` instead of `List`
]

unfixable = []

# Allow unused variables when underscore-prefixed.
#dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
dummy-variable-rgx = "_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_"

[lint.isort]
section-order = ["future", "standard-library", "system-library", "third-party", "component", "first-party", "local-folder"]

[lint.isort.sections]
component = []
system-library = [
    "matplotlib",
    "numpy",
    "scipy",
    "pandas",
    "mock",
    "coverage",
    "tox",
    "pytest",
    "six",
    "pylint",
    "flake8",
    "requests",
    "libxml2",
    "dateutil",
    "robot",
]

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
